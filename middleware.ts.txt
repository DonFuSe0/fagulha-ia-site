// middleware.ts
import { NextRequest, NextResponse } from 'next/server'
import { randomUUID } from 'crypto'

export const config = {
  matcher: ['/((?!api|_next/static|_next/image|favicon.ico).*)'],
}

export function middleware(request: NextRequest) {
  const nonce = randomUUID().replace(/-/g, '')  // gera valor aleat√≥rio

  const cspHeader = [
    "default-src 'self'",
    `script-src 'self' 'nonce-${nonce}' https://challenges.cloudflare.com`,
    "frame-src https://challenges.cloudflare.com",
    "style-src 'self' 'unsafe-inline'",  // permite estilos inline
    "img-src 'self' data: blob:",
    "font-src 'self'",
    "connect-src 'self'",
  ].join('; ')

  const headers = new Headers(request.headers)
  headers.set('x-nonce', nonce)
  headers.set('Content-Security-Policy', cspHeader)

  const response = NextResponse.next({ request: { headers } })
  response.headers.set('Content-Security-Policy', cspHeader)

  return response
}
